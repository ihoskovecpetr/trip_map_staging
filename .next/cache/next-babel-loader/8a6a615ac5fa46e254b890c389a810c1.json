{"ast":null,"code":"import { useState, useEffect, useMemo } from \"react\";\nimport axios from \"axios\";\nimport { VARIANTS_PRINTFUL } from \"../constants/constants\";\nimport { getLazyDownloader, resetPendingPromise } from \"../Lib/getLazyDownloader\";\nconsole.log(\"useGetInit_init\");\nlet cachedResponse = null;\n\nconst fetchDataPrintful = async variantIdsArr => {\n  const response = await axios.post(`api/data-printful`, {\n    variantIdsArr\n  });\n  return response;\n};\n\nexport function useGetDataPrintful() {\n  const {\n    0: data,\n    1: setData\n  } = useState(null);\n  const variantIdsArr = VARIANTS_PRINTFUL.map(variant => variant.id);\n\n  const getSetPrice = async () => {\n    try {\n      const lazyDownloadDataPrintfull = () => {\n        return getLazyDownloader(() => cachedResponse, () => fetchDataPrintful(variantIdsArr))();\n      };\n\n      const response = await lazyDownloadDataPrintfull();\n      console.log({\n        FinalRresult_cached: response.data.finalResult\n      });\n      setData(response.data.finalResult);\n    } catch (e) {\n      console.log({\n        e\n      });\n    }\n  };\n\n  useEffect(() => {\n    // console.log(\n    //   { keys: Object.keys(data), variantIdsArr },\n    //   JSON.stringify(Object.keys(data)) == JSON.stringify(variantIdsArr),\n    //   { idsAlreadyFetched: idsAlreadyFetched(variantIdsArr) }\n    // );\n    // if (!data) {\n    //   getSetPrice();\n    // }\n    console.log(\"useGetDataPrintful_fetch_new_prices\", variantIdsArr);\n    getSetPrice();\n  }, [JSON.stringify(variantIdsArr)]);\n  const data_memo = useMemo(() => {\n    return data;\n  }, [data]);\n  return {\n    data: data_memo\n  };\n}","map":{"version":3,"sources":["/Users/petrhoskovec/Desktop/code/trip_map_staging/src/Hooks/useGetDataPrintful.js"],"names":["useState","useEffect","useMemo","axios","VARIANTS_PRINTFUL","getLazyDownloader","resetPendingPromise","console","log","cachedResponse","fetchDataPrintful","variantIdsArr","response","post","useGetDataPrintful","data","setData","map","variant","id","getSetPrice","lazyDownloadDataPrintfull","FinalRresult_cached","finalResult","e","JSON","stringify","data_memo"],"mappings":"AAAA,SAASA,QAAT,EAAmBC,SAAnB,EAA8BC,OAA9B,QAA6C,OAA7C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,iBAAT,QAAkC,wBAAlC;AACA,SACEC,iBADF,EAEEC,mBAFF,QAGO,0BAHP;AAKAC,OAAO,CAACC,GAAR,CAAY,iBAAZ;AAEA,IAAIC,cAAc,GAAG,IAArB;;AAEA,MAAMC,iBAAiB,GAAG,MAAOC,aAAP,IAAyB;AACjD,QAAMC,QAAQ,GAAG,MAAMT,KAAK,CAACU,IAAN,CAAY,mBAAZ,EAAgC;AAAEF,IAAAA;AAAF,GAAhC,CAAvB;AACA,SAAOC,QAAP;AACD,CAHD;;AAKA,OAAO,SAASE,kBAAT,GAA8B;AACnC,QAAM;AAAA,OAACC,IAAD;AAAA,OAAOC;AAAP,MAAkBhB,QAAQ,CAAC,IAAD,CAAhC;AAEA,QAAMW,aAAa,GAAGP,iBAAiB,CAACa,GAAlB,CAAuBC,OAAD,IAAaA,OAAO,CAACC,EAA3C,CAAtB;;AAEA,QAAMC,WAAW,GAAG,YAAY;AAC9B,QAAI;AACF,YAAMC,yBAAyB,GAAG,MAAM;AACtC,eAAOhB,iBAAiB,CACtB,MAAMI,cADgB,EAEtB,MAAMC,iBAAiB,CAACC,aAAD,CAFD,CAAjB,EAAP;AAID,OALD;;AAMA,YAAMC,QAAQ,GAAG,MAAMS,yBAAyB,EAAhD;AAEAd,MAAAA,OAAO,CAACC,GAAR,CAAY;AAAEc,QAAAA,mBAAmB,EAAEV,QAAQ,CAACG,IAAT,CAAcQ;AAArC,OAAZ;AAEAP,MAAAA,OAAO,CAACJ,QAAQ,CAACG,IAAT,CAAcQ,WAAf,CAAP;AACD,KAZD,CAYE,OAAOC,CAAP,EAAU;AACVjB,MAAAA,OAAO,CAACC,GAAR,CAAY;AAAEgB,QAAAA;AAAF,OAAZ;AACD;AACF,GAhBD;;AAkBAvB,EAAAA,SAAS,CAAC,MAAM;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAM,IAAAA,OAAO,CAACC,GAAR,CAAY,qCAAZ,EAAmDG,aAAnD;AACAS,IAAAA,WAAW;AACZ,GAXQ,EAWN,CAACK,IAAI,CAACC,SAAL,CAAef,aAAf,CAAD,CAXM,CAAT;AAaA,QAAMgB,SAAS,GAAGzB,OAAO,CAAC,MAAM;AAC9B,WAAOa,IAAP;AACD,GAFwB,EAEtB,CAACA,IAAD,CAFsB,CAAzB;AAIA,SAAO;AAAEA,IAAAA,IAAI,EAAEY;AAAR,GAAP;AACD","sourcesContent":["import { useState, useEffect, useMemo } from \"react\";\nimport axios from \"axios\";\nimport { VARIANTS_PRINTFUL } from \"../constants/constants\";\nimport {\n  getLazyDownloader,\n  resetPendingPromise,\n} from \"../Lib/getLazyDownloader\";\n\nconsole.log(\"useGetInit_init\");\n\nlet cachedResponse = null;\n\nconst fetchDataPrintful = async (variantIdsArr) => {\n  const response = await axios.post(`api/data-printful`, { variantIdsArr });\n  return response;\n};\n\nexport function useGetDataPrintful() {\n  const [data, setData] = useState(null);\n\n  const variantIdsArr = VARIANTS_PRINTFUL.map((variant) => variant.id);\n\n  const getSetPrice = async () => {\n    try {\n      const lazyDownloadDataPrintfull = () => {\n        return getLazyDownloader(\n          () => cachedResponse,\n          () => fetchDataPrintful(variantIdsArr)\n        )();\n      };\n      const response = await lazyDownloadDataPrintfull();\n\n      console.log({ FinalRresult_cached: response.data.finalResult });\n\n      setData(response.data.finalResult);\n    } catch (e) {\n      console.log({ e });\n    }\n  };\n\n  useEffect(() => {\n    // console.log(\n    //   { keys: Object.keys(data), variantIdsArr },\n    //   JSON.stringify(Object.keys(data)) == JSON.stringify(variantIdsArr),\n    //   { idsAlreadyFetched: idsAlreadyFetched(variantIdsArr) }\n    // );\n    // if (!data) {\n    //   getSetPrice();\n    // }\n    console.log(\"useGetDataPrintful_fetch_new_prices\", variantIdsArr);\n    getSetPrice();\n  }, [JSON.stringify(variantIdsArr)]);\n\n  const data_memo = useMemo(() => {\n    return data;\n  }, [data]);\n\n  return { data: data_memo };\n}\n"]},"metadata":{},"sourceType":"module"}