{"ast":null,"code":"export const getUpdatedMapSizes = ({\n  ratio,\n  mapWrapWrapHeight,\n  mapWrapWrapWidth,\n  isMobile\n}) => {\n  const isHighSetup = ratio > 1;\n  let heightTry;\n  let widthTry;\n  const wrapElemRectangle = document.getElementById(\"map_wrapper_wrapper_id\").getBoundingClientRect();\n  const mapHeightRect = wrapElemRectangle.height;\n  const mapWidthRect = wrapElemRectangle.width;\n  const mapHeightFresh = mapHeightRect < mapWrapWrapHeight ? mapHeightRect : mapWrapWrapHeight;\n  const mapWidthFresh = mapWidthRect < mapWrapWrapWidth ? mapWidthRect : mapWrapWrapWidth;\n\n  if (isHighSetup) {\n    heightTry = mapHeightFresh;\n    widthTry = heightTry / ratio;\n\n    if (widthTry > mapWidthFresh) {\n      console.log(\"Too narrow, let make width fit\");\n      widthTry = mapWidthFresh;\n      heightTry = widthTry * ratio;\n    }\n  } else {\n    widthTry = mapWidthFresh;\n    heightTry = widthTry * ratio;\n\n    if (heightTry > mapHeightFresh) {\n      console.log(\"Too long, let make height fit\");\n      heightTry = mapHeightFresh;\n      widthTry = heightTry / ratio;\n    }\n  } // const baseSize = isMobile ? 0.8 : 0.5;\n  // const baseLong = innerWidth * baseSize; // - headerHeight;\n  // const updWidth = isHighSetup ? mapWrapWrapHeight / ratio : mapWrapWrapWidth;\n  // const updHeight = isHighSetup ? mapWrapWrapHeight : mapWrapWrapWidth * ratio;\n\n\n  return {\n    updWidth: widthTry * 0.9,\n    updHeight: heightTry * 0.9\n  };\n};","map":{"version":3,"sources":["/Users/petrhoskovec/Desktop/code/trip_map_staging/src/Lib/getUpdatedMapSizes.js"],"names":["getUpdatedMapSizes","ratio","mapWrapWrapHeight","mapWrapWrapWidth","isMobile","isHighSetup","heightTry","widthTry","wrapElemRectangle","document","getElementById","getBoundingClientRect","mapHeightRect","height","mapWidthRect","width","mapHeightFresh","mapWidthFresh","console","log","updWidth","updHeight"],"mappings":"AAAA,OAAO,MAAMA,kBAAkB,GAAG,CAAC;AACjCC,EAAAA,KADiC;AAEjCC,EAAAA,iBAFiC;AAGjCC,EAAAA,gBAHiC;AAIjCC,EAAAA;AAJiC,CAAD,KAK5B;AACJ,QAAMC,WAAW,GAAGJ,KAAK,GAAG,CAA5B;AAEA,MAAIK,SAAJ;AACA,MAAIC,QAAJ;AAEA,QAAMC,iBAAiB,GAAGC,QAAQ,CAC/BC,cADuB,CACR,wBADQ,EAEvBC,qBAFuB,EAA1B;AAIA,QAAMC,aAAa,GAAGJ,iBAAiB,CAACK,MAAxC;AAEA,QAAMC,YAAY,GAAGN,iBAAiB,CAACO,KAAvC;AAEA,QAAMC,cAAc,GAClBJ,aAAa,GAAGV,iBAAhB,GAAoCU,aAApC,GAAoDV,iBADtD;AAEA,QAAMe,aAAa,GACjBH,YAAY,GAAGX,gBAAf,GAAkCW,YAAlC,GAAiDX,gBADnD;;AAGA,MAAIE,WAAJ,EAAiB;AACfC,IAAAA,SAAS,GAAGU,cAAZ;AACAT,IAAAA,QAAQ,GAAGD,SAAS,GAAGL,KAAvB;;AAEA,QAAIM,QAAQ,GAAGU,aAAf,EAA8B;AAC5BC,MAAAA,OAAO,CAACC,GAAR,CAAY,gCAAZ;AACAZ,MAAAA,QAAQ,GAAGU,aAAX;AACAX,MAAAA,SAAS,GAAGC,QAAQ,GAAGN,KAAvB;AACD;AACF,GATD,MASO;AACLM,IAAAA,QAAQ,GAAGU,aAAX;AACAX,IAAAA,SAAS,GAAGC,QAAQ,GAAGN,KAAvB;;AACA,QAAIK,SAAS,GAAGU,cAAhB,EAAgC;AAC9BE,MAAAA,OAAO,CAACC,GAAR,CAAY,+BAAZ;AAEAb,MAAAA,SAAS,GAAGU,cAAZ;AACAT,MAAAA,QAAQ,GAAGD,SAAS,GAAGL,KAAvB;AACD;AACF,GArCG,CAuCJ;AACA;AACA;AACA;;;AAEA,SAAO;AACLmB,IAAAA,QAAQ,EAAEb,QAAQ,GAAG,GADhB;AAELc,IAAAA,SAAS,EAAEf,SAAS,GAAG;AAFlB,GAAP;AAID,CArDM","sourcesContent":["export const getUpdatedMapSizes = ({\n  ratio,\n  mapWrapWrapHeight,\n  mapWrapWrapWidth,\n  isMobile,\n}) => {\n  const isHighSetup = ratio > 1;\n\n  let heightTry;\n  let widthTry;\n\n  const wrapElemRectangle = document\n    .getElementById(\"map_wrapper_wrapper_id\")\n    .getBoundingClientRect();\n\n  const mapHeightRect = wrapElemRectangle.height;\n\n  const mapWidthRect = wrapElemRectangle.width;\n\n  const mapHeightFresh =\n    mapHeightRect < mapWrapWrapHeight ? mapHeightRect : mapWrapWrapHeight;\n  const mapWidthFresh =\n    mapWidthRect < mapWrapWrapWidth ? mapWidthRect : mapWrapWrapWidth;\n\n  if (isHighSetup) {\n    heightTry = mapHeightFresh;\n    widthTry = heightTry / ratio;\n\n    if (widthTry > mapWidthFresh) {\n      console.log(\"Too narrow, let make width fit\");\n      widthTry = mapWidthFresh;\n      heightTry = widthTry * ratio;\n    }\n  } else {\n    widthTry = mapWidthFresh;\n    heightTry = widthTry * ratio;\n    if (heightTry > mapHeightFresh) {\n      console.log(\"Too long, let make height fit\");\n\n      heightTry = mapHeightFresh;\n      widthTry = heightTry / ratio;\n    }\n  }\n\n  // const baseSize = isMobile ? 0.8 : 0.5;\n  // const baseLong = innerWidth * baseSize; // - headerHeight;\n  // const updWidth = isHighSetup ? mapWrapWrapHeight / ratio : mapWrapWrapWidth;\n  // const updHeight = isHighSetup ? mapWrapWrapHeight : mapWrapWrapWidth * ratio;\n\n  return {\n    updWidth: widthTry * 0.9,\n    updHeight: heightTry * 0.9,\n  };\n};\n"]},"metadata":{},"sourceType":"module"}