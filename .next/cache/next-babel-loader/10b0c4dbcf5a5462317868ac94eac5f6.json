{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect, useMemo } from \"react\";\nexport function useElementDimensions(element_id) {\n  _s();\n\n  var _useState = useState({\n    height: 0,\n    width: 0\n  }),\n      dimensions = _useState[0],\n      setDimensions = _useState[1];\n\n  useEffect(function () {\n    var handleResize = function handleResize() {\n      if (!window) {\n        return;\n      }\n\n      setDimensions({\n        height: document.getElementById(element_id).getBoundingClientRect().height,\n        width: document.getElementById(element_id).getBoundingClientRect().width\n      });\n    };\n\n    handleResize();\n    window.addEventListener(\"resize\", handleResize);\n    window.addEventListener(\"load\", handleResize);\n    return function () {\n      window.removeEventListener(\"resize\", handleResize);\n      window.removeEventListener(\"load\", handleResize);\n    };\n  }, []);\n  var dimensions_memo = useMemo(function () {\n    return dimensions;\n  }, [dimensions]);\n  return dimensions_memo;\n}\n\n_s(useElementDimensions, \"/24wVaCoHnxFe7PnqwcCkD/KE8A=\");","map":{"version":3,"sources":["/Users/petrhoskovec/Desktop/code/trip_map_staging/src/Hooks/useElementDimensions.js"],"names":["useState","useEffect","useMemo","useElementDimensions","element_id","height","width","dimensions","setDimensions","handleResize","window","document","getElementById","getBoundingClientRect","addEventListener","removeEventListener","dimensions_memo"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,SAAnB,EAA8BC,OAA9B,QAA6C,OAA7C;AAEA,OAAO,SAASC,oBAAT,CAA8BC,UAA9B,EAA0C;AAAA;;AAAA,kBACXJ,QAAQ,CAAC;AAAEK,IAAAA,MAAM,EAAE,CAAV;AAAaC,IAAAA,KAAK,EAAE;AAApB,GAAD,CADG;AAAA,MACxCC,UADwC;AAAA,MAC5BC,aAD4B;;AAG/CP,EAAAA,SAAS,CAAC,YAAM;AACd,QAAMQ,YAAY,GAAG,SAAfA,YAAe,GAAM;AACzB,UAAI,CAACC,MAAL,EAAa;AACX;AACD;;AAEDF,MAAAA,aAAa,CAAC;AACZH,QAAAA,MAAM,EAAEM,QAAQ,CAACC,cAAT,CAAwBR,UAAxB,EAAoCS,qBAApC,GACLR,MAFS;AAGZC,QAAAA,KAAK,EAAEK,QAAQ,CAACC,cAAT,CAAwBR,UAAxB,EAAoCS,qBAApC,GACJP;AAJS,OAAD,CAAb;AAMD,KAXD;;AAaAG,IAAAA,YAAY;AAEZC,IAAAA,MAAM,CAACI,gBAAP,CAAwB,QAAxB,EAAkCL,YAAlC;AACAC,IAAAA,MAAM,CAACI,gBAAP,CAAwB,MAAxB,EAAgCL,YAAhC;AACA,WAAO,YAAM;AACXC,MAAAA,MAAM,CAACK,mBAAP,CAA2B,QAA3B,EAAqCN,YAArC;AACAC,MAAAA,MAAM,CAACK,mBAAP,CAA2B,MAA3B,EAAmCN,YAAnC;AACD,KAHD;AAID,GAtBQ,EAsBN,EAtBM,CAAT;AAwBA,MAAMO,eAAe,GAAGd,OAAO,CAAC,YAAM;AACpC,WAAOK,UAAP;AACD,GAF8B,EAE5B,CAACA,UAAD,CAF4B,CAA/B;AAIA,SAAOS,eAAP;AACD;;GAhCeb,oB","sourcesContent":["import { useState, useEffect, useMemo } from \"react\";\n\nexport function useElementDimensions(element_id) {\n  const [dimensions, setDimensions] = useState({ height: 0, width: 0 });\n\n  useEffect(() => {\n    const handleResize = () => {\n      if (!window) {\n        return;\n      }\n\n      setDimensions({\n        height: document.getElementById(element_id).getBoundingClientRect()\n          .height,\n        width: document.getElementById(element_id).getBoundingClientRect()\n          .width,\n      });\n    };\n\n    handleResize();\n\n    window.addEventListener(\"resize\", handleResize);\n    window.addEventListener(\"load\", handleResize);\n    return () => {\n      window.removeEventListener(\"resize\", handleResize);\n      window.removeEventListener(\"load\", handleResize);\n    };\n  }, []);\n\n  const dimensions_memo = useMemo(() => {\n    return dimensions;\n  }, [dimensions]);\n\n  return dimensions_memo;\n}\n"]},"metadata":{},"sourceType":"module"}