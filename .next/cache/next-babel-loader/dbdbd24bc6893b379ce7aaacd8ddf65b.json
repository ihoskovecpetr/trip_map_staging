{"ast":null,"code":"var __jsx = React.createElement;\n\n/** @jsx jsx */\nimport React, { useEffect, useState } from \"react\";\nimport { jsx, Button } from \"theme-ui\";\nimport { toast } from \"react-toastify\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Backdrop from \"@material-ui/core/Backdrop\";\nimport { createUploadRequest } from \"../../Lib/createUploadRequest\";\nimport { getIsVariantFramed } from \"../../Lib/getIsVariantFramed\";\nimport { drawLayout } from \"../../Lib/drawLayout\";\nimport CheckoutCard from \"../CheckoutCard/CheckoutCard\";\nimport NextTabBtn from \"../NextTabBtn/NextTabBtn\";\nimport { getLazyUploader, resetPendingPromise } from \"../../Lib/getLazyUploader\";\ntoast.configure();\n\nfunction takeScreenshot(mapLocal) {\n  return new Promise(function (resolve, _) {\n    mapLocal.once(\"render\", function () {\n      resolve(mapLocal.getCanvas().toDataURL());\n    });\n    /* trigger render */\n\n    mapLocal.setBearing(mapLocal.getBearing());\n  });\n}\n\nexport default function Tab3Checkout({\n  map,\n  mapTitles,\n  activeLayout,\n  product,\n  activeMapStyle,\n  dataPrintfulVariant\n}) {\n  const classes = useStyles();\n  const {\n    0: backdropOpen,\n    1: setBackdropOpen\n  } = useState(false);\n  const {\n    0: isUploadPending,\n    1: setIsUploadPending\n  } = useState(false);\n  const {\n    0: imageBase64,\n    1: setImageBase64\n  } = useState(\"\");\n  const {\n    0: imageSavedResponse,\n    1: setImageSavedResponse\n  } = useState(null);\n  const {\n    0: percentageUpload,\n    1: setPercentageUpload\n  } = useState(0);\n  useEffect(() => {\n    setImageSavedResponse(null);\n    resetPendingPromise();\n  }, [map, mapTitles, activeLayout, product, activeMapStyle]);\n\n  const createImage = async () => {\n    return new Promise((resolve, reject) => {\n      takeScreenshot(map).then(function (data) {\n        console.log(\"takeScreenshot DONE\");\n        var image = new Image();\n\n        image.onload = function () {\n          const mergerCanvas = document.getElementById(\"canvas_merging\");\n          mergerCanvas.setAttribute(\"height\", image.height);\n          mergerCanvas.setAttribute(\"width\", image.width);\n          var ctx = mergerCanvas.getContext(\"2d\");\n          ctx.drawImage(image, 0, 0);\n          drawLayout(ctx, {\n            width: image.width,\n            height: image.height,\n            activeLayout,\n            mapTitles,\n            frameWidthKoef: getIsVariantFramed(product.variantId).frameWidth,\n            product,\n            isProductionPrint: true\n          });\n          resolve(mergerCanvas.toDataURL());\n        };\n\n        image.src = data;\n      });\n    });\n  };\n\n  const progressCallbackFce = progressEvent => {\n    var percentCompleted = Math.round(progressEvent.loaded * 100 / progressEvent.total);\n    setPercentageUpload(percentCompleted);\n  };\n\n  const uploadImage = async () => {\n    try {\n      setBackdropOpen(true);\n      setIsUploadPending(true);\n      const finalImgSrc = await createImage();\n      const head = \"data:image/png;base64,\";\n      const imgFileSizeMB = Math.round((finalImgSrc.length - head.length) * 3 / 4 / 1000000);\n      let originalVarId = product.variantId;\n      console.log({\n        originalVarId\n      });\n      console.log({\n        finalImgSrc,\n        imgFileSizeMB\n      });\n      setImageBase64(finalImgSrc);\n      const response = await createUploadRequest(finalImgSrc, progressCallbackFce);\n      console.log(\"Ulozeni Response: \", {\n        response,\n        originalVarId,\n        prodId: product.variantId\n      });\n\n      if (response.data.secure_url) {\n        console.log(\"✅ successful upload!\");\n        toast(\"✔️ uloženo, můžete pokračovat\", {\n          type: \"success\"\n        });\n        setIsUploadPending(false);\n        setImageSavedResponse(response.data);\n        return response.data;\n      }\n    } catch (e) {\n      console.error(e);\n    }\n  };\n\n  const lazyUploadImage = () => {\n    return getLazyUploader(() => imageSavedResponse, () => uploadImage())();\n  };\n\n  const backdropClose = () => {\n    setBackdropOpen(false);\n  };\n\n  return jsx(\"div\", {\n    sx: styles.container\n  }, jsx(\"div\", {\n    sx: styles.absoluteBtnWrap\n  }, jsx(NextTabBtn, {\n    onClick: () => {\n      setBackdropOpen(true);\n      lazyUploadImage();\n    },\n    margin: \"20px 0px 75px\",\n    price: eval(`${product.price} + ${dataPrintfulVariant === null || dataPrintfulVariant === void 0 ? void 0 : dataPrintfulVariant.shipping.rate}`) //TODO add big.js\n\n  }, \"Shrnut\\xED objedn\\xE1vky\")), jsx(\"img\", {\n    id: \"img_screen_shot\",\n    sx: styles.resultImage\n  }), jsx(Backdrop, {\n    className: classes.backdrop,\n    classes: {\n      root: classes.rootBackdrop // class name, e.g. `classes-nesting-root-x`\n\n    },\n    open: backdropOpen,\n    onClick: backdropClose\n  }, jsx(CheckoutCard, {\n    isUploadPending: isUploadPending,\n    setIsUploadPending: setIsUploadPending,\n    product: product,\n    mapTitles: mapTitles,\n    imageSavedResponse: imageSavedResponse,\n    imageBase64: imageBase64 // shippingInfoObject={shippingInfoObject}\n    // isShippingInfoLoading={isShippingInfoLoading}\n    ,\n    backdropClose: backdropClose,\n    percentageUpload: percentageUpload\n  })));\n}\nconst styles = {\n  container: {\n    margin: \"50px 0\",\n    \"& p\": {\n      fontFamily: \"Arial, sans-serif\",\n      margin: 0\n    }\n  },\n  payRow: {\n    padding: \"10px\",\n    width: \"100%\"\n  },\n  absoluteBtnWrap: {\n    position: \"fixed\",\n    top: \"85vh\",\n    left: \"0px\",\n    width: [\"100%\", \"100%\", \"100%\", \"40%\"]\n  },\n  resultImage: {\n    width: \"100%\",\n    backgroundColor: \"green\",\n    zIndex: 10\n  }\n};\nconst useStyles = makeStyles(theme => ({\n  backdrop: {\n    zIndex: \"10 !important\",\n    color: \"#fff\"\n  },\n  rootBackdrop: {\n    zIndex: \"12 !important\"\n  }\n}));","map":{"version":3,"sources":["/Users/petrhoskovec/Desktop/code/trip_map_staging/src/components/Tab3/tab3Checkout.js"],"names":["React","useEffect","useState","jsx","Button","toast","makeStyles","Backdrop","createUploadRequest","getIsVariantFramed","drawLayout","CheckoutCard","NextTabBtn","getLazyUploader","resetPendingPromise","configure","takeScreenshot","mapLocal","Promise","resolve","_","once","getCanvas","toDataURL","setBearing","getBearing","Tab3Checkout","map","mapTitles","activeLayout","product","activeMapStyle","dataPrintfulVariant","classes","useStyles","backdropOpen","setBackdropOpen","isUploadPending","setIsUploadPending","imageBase64","setImageBase64","imageSavedResponse","setImageSavedResponse","percentageUpload","setPercentageUpload","createImage","reject","then","data","console","log","image","Image","onload","mergerCanvas","document","getElementById","setAttribute","height","width","ctx","getContext","drawImage","frameWidthKoef","variantId","frameWidth","isProductionPrint","src","progressCallbackFce","progressEvent","percentCompleted","Math","round","loaded","total","uploadImage","finalImgSrc","head","imgFileSizeMB","length","originalVarId","response","prodId","secure_url","type","e","error","lazyUploadImage","backdropClose","styles","container","absoluteBtnWrap","eval","price","shipping","rate","resultImage","backdrop","root","rootBackdrop","margin","fontFamily","payRow","padding","position","top","left","backgroundColor","zIndex","theme","color"],"mappings":"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","sourcesContent":["/** @jsx jsx */\nimport React, { useEffect, useState } from \"react\";\nimport { jsx, Button } from \"theme-ui\";\nimport { toast } from \"react-toastify\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Backdrop from \"@material-ui/core/Backdrop\";\n\nimport { createUploadRequest } from \"../../Lib/createUploadRequest\";\nimport { getIsVariantFramed } from \"../../Lib/getIsVariantFramed\";\nimport { drawLayout } from \"../../Lib/drawLayout\";\nimport CheckoutCard from \"../CheckoutCard/CheckoutCard\";\nimport NextTabBtn from \"../NextTabBtn/NextTabBtn\";\n\nimport {\n  getLazyUploader,\n  resetPendingPromise,\n} from \"../../Lib/getLazyUploader\";\n\ntoast.configure();\n\nfunction takeScreenshot(mapLocal) {\n  return new Promise(function (resolve, _) {\n    mapLocal.once(\"render\", function () {\n      resolve(mapLocal.getCanvas().toDataURL());\n    });\n\n    /* trigger render */\n    mapLocal.setBearing(mapLocal.getBearing());\n  });\n}\n\nexport default function Tab3Checkout({\n  map,\n  mapTitles,\n  activeLayout,\n  product,\n  activeMapStyle,\n  dataPrintfulVariant,\n}) {\n  const classes = useStyles();\n\n  const [backdropOpen, setBackdropOpen] = useState(false);\n  const [isUploadPending, setIsUploadPending] = useState(false);\n  const [imageBase64, setImageBase64] = useState(\"\");\n  const [imageSavedResponse, setImageSavedResponse] = useState(null);\n  const [percentageUpload, setPercentageUpload] = useState(0);\n\n  useEffect(() => {\n    setImageSavedResponse(null);\n    resetPendingPromise();\n  }, [map, mapTitles, activeLayout, product, activeMapStyle]);\n\n  const createImage = async () => {\n    return new Promise((resolve, reject) => {\n      takeScreenshot(map).then(function (data) {\n        console.log(\"takeScreenshot DONE\");\n        var image = new Image();\n\n        image.onload = function () {\n          const mergerCanvas = document.getElementById(\"canvas_merging\");\n          mergerCanvas.setAttribute(\"height\", image.height);\n          mergerCanvas.setAttribute(\"width\", image.width);\n          var ctx = mergerCanvas.getContext(\"2d\");\n          ctx.drawImage(image, 0, 0);\n\n          drawLayout(ctx, {\n            width: image.width,\n            height: image.height,\n            activeLayout,\n            mapTitles,\n            frameWidthKoef: getIsVariantFramed(product.variantId).frameWidth,\n            product,\n            isProductionPrint: true,\n          });\n          resolve(mergerCanvas.toDataURL());\n        };\n\n        image.src = data;\n      });\n    });\n  };\n\n  const progressCallbackFce = (progressEvent) => {\n    var percentCompleted = Math.round(\n      (progressEvent.loaded * 100) / progressEvent.total\n    );\n\n    setPercentageUpload(percentCompleted);\n  };\n\n  const uploadImage = async () => {\n    try {\n      setBackdropOpen(true);\n      setIsUploadPending(true);\n      const finalImgSrc = await createImage();\n\n      const head = \"data:image/png;base64,\";\n\n      const imgFileSizeMB = Math.round(\n        ((finalImgSrc.length - head.length) * 3) / 4 / 1000000\n      );\n\n      let originalVarId = product.variantId;\n\n      console.log({ originalVarId });\n\n      console.log({ finalImgSrc, imgFileSizeMB });\n\n      setImageBase64(finalImgSrc);\n      const response = await createUploadRequest(\n        finalImgSrc,\n        progressCallbackFce\n      );\n      console.log(\"Ulozeni Response: \", {\n        response,\n        originalVarId,\n        prodId: product.variantId,\n      });\n\n      if (response.data.secure_url) {\n        console.log(\"✅ successful upload!\");\n        toast(\"✔️ uloženo, můžete pokračovat\", { type: \"success\" });\n\n        setIsUploadPending(false);\n        setImageSavedResponse(response.data);\n\n        return response.data;\n      }\n    } catch (e) {\n      console.error(e);\n    }\n  };\n\n  const lazyUploadImage = () => {\n    return getLazyUploader(\n      () => imageSavedResponse,\n      () => uploadImage()\n    )();\n  };\n\n  const backdropClose = () => {\n    setBackdropOpen(false);\n  };\n  return (\n    <div sx={styles.container}>\n      <div sx={styles.absoluteBtnWrap}>\n        <NextTabBtn\n          onClick={() => {\n            setBackdropOpen(true);\n            lazyUploadImage();\n          }}\n          margin=\"20px 0px 75px\"\n          price={eval(\n            `${product.price} + ${dataPrintfulVariant?.shipping.rate}`\n          )} //TODO add big.js\n        >\n          Shrnutí objednávky\n        </NextTabBtn>\n      </div>\n\n      <img id=\"img_screen_shot\" sx={styles.resultImage} />\n      <Backdrop\n        className={classes.backdrop}\n        classes={{\n          root: classes.rootBackdrop, // class name, e.g. `classes-nesting-root-x`\n        }}\n        open={backdropOpen}\n        onClick={backdropClose}\n      >\n        <CheckoutCard\n          isUploadPending={isUploadPending}\n          setIsUploadPending={setIsUploadPending}\n          product={product}\n          mapTitles={mapTitles}\n          imageSavedResponse={imageSavedResponse}\n          imageBase64={imageBase64}\n          // shippingInfoObject={shippingInfoObject}\n          // isShippingInfoLoading={isShippingInfoLoading}\n          backdropClose={backdropClose}\n          percentageUpload={percentageUpload}\n        />\n      </Backdrop>\n    </div>\n  );\n}\n\nconst styles = {\n  container: {\n    margin: \"50px 0\",\n    \"& p\": {\n      fontFamily: \"Arial, sans-serif\",\n      margin: 0,\n    },\n  },\n  payRow: {\n    padding: \"10px\",\n    width: \"100%\",\n  },\n  absoluteBtnWrap: {\n    position: \"fixed\",\n    top: \"85vh\",\n    left: \"0px\",\n    width: [\"100%\", \"100%\", \"100%\", \"40%\"],\n  },\n  resultImage: {\n    width: \"100%\",\n    backgroundColor: \"green\",\n    zIndex: 10,\n  },\n};\n\nconst useStyles = makeStyles((theme) => ({\n  backdrop: {\n    zIndex: \"10 !important\",\n    color: \"#fff\",\n  },\n  rootBackdrop: {\n    zIndex: \"12 !important\",\n  },\n}));\n"]},"metadata":{},"sourceType":"module"}