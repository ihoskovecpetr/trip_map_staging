{"ast":null,"code":"import { useState, useEffect, useMemo } from \"react\";\nexport function useElementDimensions(element_id) {\n  const {\n    0: dimensions,\n    1: setDimensions\n  } = useState({\n    height: 0,\n    width: 0\n  });\n  useEffect(() => {\n    const handleResize = () => {\n      if (!window) {\n        return;\n      }\n\n      setDimensions({\n        height: document.getElementById(element_id).getBoundingClientRect().height,\n        width: document.getElementById(element_id).getBoundingClientRect().width\n      });\n    };\n\n    handleResize();\n    window.addEventListener(\"resize\", handleResize);\n    window.addEventListener(\"load\", handleResize);\n    return () => {\n      window.removeEventListener(\"resize\", handleResize);\n      window.removeEventListener(\"load\", handleResize);\n    };\n  }, []);\n  const dimensions_memo = useMemo(() => {\n    return dimensions;\n  }, [dimensions]);\n  return dimensions_memo;\n}","map":{"version":3,"sources":["/Users/petrhoskovec/Desktop/code/trip_map_staging/src/Hooks/useElementDimensions.js"],"names":["useState","useEffect","useMemo","useElementDimensions","element_id","dimensions","setDimensions","height","width","handleResize","window","document","getElementById","getBoundingClientRect","addEventListener","removeEventListener","dimensions_memo"],"mappings":"AAAA,SAASA,QAAT,EAAmBC,SAAnB,EAA8BC,OAA9B,QAA6C,OAA7C;AAEA,OAAO,SAASC,oBAAT,CAA8BC,UAA9B,EAA0C;AAC/C,QAAM;AAAA,OAACC,UAAD;AAAA,OAAaC;AAAb,MAA8BN,QAAQ,CAAC;AAAEO,IAAAA,MAAM,EAAE,CAAV;AAAaC,IAAAA,KAAK,EAAE;AAApB,GAAD,CAA5C;AAEAP,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMQ,YAAY,GAAG,MAAM;AACzB,UAAI,CAACC,MAAL,EAAa;AACX;AACD;;AAEDJ,MAAAA,aAAa,CAAC;AACZC,QAAAA,MAAM,EAAEI,QAAQ,CAACC,cAAT,CAAwBR,UAAxB,EAAoCS,qBAApC,GACLN,MAFS;AAGZC,QAAAA,KAAK,EAAEG,QAAQ,CAACC,cAAT,CAAwBR,UAAxB,EAAoCS,qBAApC,GACJL;AAJS,OAAD,CAAb;AAMD,KAXD;;AAaAC,IAAAA,YAAY;AAEZC,IAAAA,MAAM,CAACI,gBAAP,CAAwB,QAAxB,EAAkCL,YAAlC;AACAC,IAAAA,MAAM,CAACI,gBAAP,CAAwB,MAAxB,EAAgCL,YAAhC;AACA,WAAO,MAAM;AACXC,MAAAA,MAAM,CAACK,mBAAP,CAA2B,QAA3B,EAAqCN,YAArC;AACAC,MAAAA,MAAM,CAACK,mBAAP,CAA2B,MAA3B,EAAmCN,YAAnC;AACD,KAHD;AAID,GAtBQ,EAsBN,EAtBM,CAAT;AAwBA,QAAMO,eAAe,GAAGd,OAAO,CAAC,MAAM;AACpC,WAAOG,UAAP;AACD,GAF8B,EAE5B,CAACA,UAAD,CAF4B,CAA/B;AAIA,SAAOW,eAAP;AACD","sourcesContent":["import { useState, useEffect, useMemo } from \"react\";\n\nexport function useElementDimensions(element_id) {\n  const [dimensions, setDimensions] = useState({ height: 0, width: 0 });\n\n  useEffect(() => {\n    const handleResize = () => {\n      if (!window) {\n        return;\n      }\n\n      setDimensions({\n        height: document.getElementById(element_id).getBoundingClientRect()\n          .height,\n        width: document.getElementById(element_id).getBoundingClientRect()\n          .width,\n      });\n    };\n\n    handleResize();\n\n    window.addEventListener(\"resize\", handleResize);\n    window.addEventListener(\"load\", handleResize);\n    return () => {\n      window.removeEventListener(\"resize\", handleResize);\n      window.removeEventListener(\"load\", handleResize);\n    };\n  }, []);\n\n  const dimensions_memo = useMemo(() => {\n    return dimensions;\n  }, [dimensions]);\n\n  return dimensions_memo;\n}\n"]},"metadata":{},"sourceType":"module"}