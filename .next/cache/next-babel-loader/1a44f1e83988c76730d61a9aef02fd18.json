{"ast":null,"code":"import { getIsVariantFramed } from \"../Lib/getIsVariantFramed\";\nimport { getLayoutObject } from \"../Lib/getLayoutObject\";\nimport { getBottomBannerHeightKoef } from \"../Lib/getBottomBannerHeightKoef\"; // import { PIXEL_RATIO } from \"../constants/constants\";\n\nimport { getCurrentPixelRatio } from \"./getCurrentPixelRatio\";\nexport var getCenteringFrameWidth = function getCenteringFrameWidth(_ref) {\n  var variantId = _ref.variantId,\n      layoutName = _ref.layout,\n      elWidth = _ref.elWidth,\n      elHeight = _ref.elHeight;\n  var baseLongSize;\n  var CURRENT_PIXEL_RATIO = getCurrentPixelRatio(variantId);\n\n  if (elHeight > elWidth) {\n    baseLongSize = elHeight;\n  } else {\n    baseLongSize = elWidth;\n  }\n\n  var bottomBannerHeightKoef = getBottomBannerHeightKoef(layoutName);\n  var bottomBannerHeight = baseLongSize * bottomBannerHeightKoef / CURRENT_PIXEL_RATIO;\n  var layoutObj = getLayoutObject(layoutName); // Layout padding is allways bigger than frame, so it can return regardless of presence of the frame\n\n  if (layoutObj === null || layoutObj === void 0 ? void 0 : layoutObj.roundPdng) {\n    return {\n      paddingWidth: baseLongSize * layoutObj.roundPdng / CURRENT_PIXEL_RATIO,\n      // this is baseSize!! count it back from this\n      isPaddingFromFrame: false,\n      paddingCoefficient: layoutObj.roundPdng,\n      bottomBannerHeight: bottomBannerHeight,\n      bottomBannerHeightKoef: bottomBannerHeightKoef,\n      isBannerBlur: layoutObj.isBannerBlur,\n      layoutObj: layoutObj,\n      baseLongSize: baseLongSize\n    };\n  }\n\n  var variantFrameKoef = getIsVariantFramed(variantId).frameWidth;\n\n  if (variantFrameKoef) {\n    return {\n      paddingWidth: baseLongSize * variantFrameKoef / CURRENT_PIXEL_RATIO,\n      isPaddingFromFrame: true,\n      paddingCoefficient: variantFrameKoef,\n      bottomBannerHeight: bottomBannerHeight,\n      bottomBannerHeightKoef: bottomBannerHeightKoef,\n      isBannerBlur: layoutObj.isBannerBlur,\n      layoutObj: layoutObj,\n      baseLongSize: baseLongSize\n    };\n  }\n\n  return {\n    paddingWidth: 0,\n    paddingCoefficient: 0,\n    bottomBannerHeight: bottomBannerHeight,\n    bottomBannerHeightKoef: bottomBannerHeightKoef,\n    isBannerBlur: layoutObj.isBannerBlur,\n    layoutObj: layoutObj,\n    baseLongSize: baseLongSize\n  };\n};","map":{"version":3,"sources":["/Users/petrhoskovec/Desktop/code/trip_map_staging/src/Lib/getCenteringFrameWidth.js"],"names":["getIsVariantFramed","getLayoutObject","getBottomBannerHeightKoef","getCurrentPixelRatio","getCenteringFrameWidth","variantId","layoutName","layout","elWidth","elHeight","baseLongSize","CURRENT_PIXEL_RATIO","bottomBannerHeightKoef","bottomBannerHeight","layoutObj","roundPdng","paddingWidth","isPaddingFromFrame","paddingCoefficient","isBannerBlur","variantFrameKoef","frameWidth"],"mappings":"AAAA,SAASA,kBAAT,QAAmC,2BAAnC;AACA,SAASC,eAAT,QAAgC,wBAAhC;AACA,SAASC,yBAAT,QAA0C,kCAA1C,C,CAEA;;AACA,SAASC,oBAAT,QAAqC,wBAArC;AAEA,OAAO,IAAMC,sBAAsB,GAAG,SAAzBA,sBAAyB,OAKhC;AAAA,MAJJC,SAII,QAJJA,SAII;AAAA,MAHIC,UAGJ,QAHJC,MAGI;AAAA,MAFJC,OAEI,QAFJA,OAEI;AAAA,MADJC,QACI,QADJA,QACI;AACJ,MAAIC,YAAJ;AAEA,MAAMC,mBAAmB,GAAGR,oBAAoB,CAACE,SAAD,CAAhD;;AAEA,MAAII,QAAQ,GAAGD,OAAf,EAAwB;AACtBE,IAAAA,YAAY,GAAGD,QAAf;AACD,GAFD,MAEO;AACLC,IAAAA,YAAY,GAAGF,OAAf;AACD;;AAED,MAAMI,sBAAsB,GAAGV,yBAAyB,CAACI,UAAD,CAAxD;AACA,MAAMO,kBAAkB,GACrBH,YAAY,GAAGE,sBAAhB,GAA0CD,mBAD5C;AAGA,MAAMG,SAAS,GAAGb,eAAe,CAACK,UAAD,CAAjC,CAfI,CAiBJ;;AACA,MAAIQ,SAAJ,aAAIA,SAAJ,uBAAIA,SAAS,CAAEC,SAAf,EAA0B;AACxB,WAAO;AACLC,MAAAA,YAAY,EAAGN,YAAY,GAAGI,SAAS,CAACC,SAA1B,GAAuCJ,mBADhD;AACqE;AAC1EM,MAAAA,kBAAkB,EAAE,KAFf;AAGLC,MAAAA,kBAAkB,EAAEJ,SAAS,CAACC,SAHzB;AAILF,MAAAA,kBAAkB,EAAlBA,kBAJK;AAKLD,MAAAA,sBAAsB,EAAtBA,sBALK;AAMLO,MAAAA,YAAY,EAAEL,SAAS,CAACK,YANnB;AAOLL,MAAAA,SAAS,EAATA,SAPK;AAQLJ,MAAAA,YAAY,EAAZA;AARK,KAAP;AAUD;;AAED,MAAMU,gBAAgB,GAAGpB,kBAAkB,CAACK,SAAD,CAAlB,CAA8BgB,UAAvD;;AAEA,MAAID,gBAAJ,EAAsB;AACpB,WAAO;AACLJ,MAAAA,YAAY,EAAGN,YAAY,GAAGU,gBAAhB,GAAoCT,mBAD7C;AAELM,MAAAA,kBAAkB,EAAE,IAFf;AAGLC,MAAAA,kBAAkB,EAAEE,gBAHf;AAILP,MAAAA,kBAAkB,EAAlBA,kBAJK;AAKLD,MAAAA,sBAAsB,EAAtBA,sBALK;AAMLO,MAAAA,YAAY,EAAEL,SAAS,CAACK,YANnB;AAOLL,MAAAA,SAAS,EAATA,SAPK;AAQLJ,MAAAA,YAAY,EAAZA;AARK,KAAP;AAUD;;AAED,SAAO;AACLM,IAAAA,YAAY,EAAE,CADT;AAELE,IAAAA,kBAAkB,EAAE,CAFf;AAGLL,IAAAA,kBAAkB,EAAlBA,kBAHK;AAILD,IAAAA,sBAAsB,EAAtBA,sBAJK;AAKLO,IAAAA,YAAY,EAAEL,SAAS,CAACK,YALnB;AAMLL,IAAAA,SAAS,EAATA,SANK;AAOLJ,IAAAA,YAAY,EAAZA;AAPK,GAAP;AASD,CA5DM","sourcesContent":["import { getIsVariantFramed } from \"../Lib/getIsVariantFramed\";\nimport { getLayoutObject } from \"../Lib/getLayoutObject\";\nimport { getBottomBannerHeightKoef } from \"../Lib/getBottomBannerHeightKoef\";\n\n// import { PIXEL_RATIO } from \"../constants/constants\";\nimport { getCurrentPixelRatio } from \"./getCurrentPixelRatio\";\n\nexport const getCenteringFrameWidth = ({\n  variantId,\n  layout: layoutName,\n  elWidth,\n  elHeight,\n}) => {\n  let baseLongSize;\n\n  const CURRENT_PIXEL_RATIO = getCurrentPixelRatio(variantId);\n\n  if (elHeight > elWidth) {\n    baseLongSize = elHeight;\n  } else {\n    baseLongSize = elWidth;\n  }\n\n  const bottomBannerHeightKoef = getBottomBannerHeightKoef(layoutName);\n  const bottomBannerHeight =\n    (baseLongSize * bottomBannerHeightKoef) / CURRENT_PIXEL_RATIO;\n\n  const layoutObj = getLayoutObject(layoutName);\n\n  // Layout padding is allways bigger than frame, so it can return regardless of presence of the frame\n  if (layoutObj?.roundPdng) {\n    return {\n      paddingWidth: (baseLongSize * layoutObj.roundPdng) / CURRENT_PIXEL_RATIO, // this is baseSize!! count it back from this\n      isPaddingFromFrame: false,\n      paddingCoefficient: layoutObj.roundPdng,\n      bottomBannerHeight,\n      bottomBannerHeightKoef,\n      isBannerBlur: layoutObj.isBannerBlur,\n      layoutObj,\n      baseLongSize,\n    };\n  }\n\n  const variantFrameKoef = getIsVariantFramed(variantId).frameWidth;\n\n  if (variantFrameKoef) {\n    return {\n      paddingWidth: (baseLongSize * variantFrameKoef) / CURRENT_PIXEL_RATIO,\n      isPaddingFromFrame: true,\n      paddingCoefficient: variantFrameKoef,\n      bottomBannerHeight,\n      bottomBannerHeightKoef,\n      isBannerBlur: layoutObj.isBannerBlur,\n      layoutObj,\n      baseLongSize,\n    };\n  }\n\n  return {\n    paddingWidth: 0,\n    paddingCoefficient: 0,\n    bottomBannerHeight,\n    bottomBannerHeightKoef,\n    isBannerBlur: layoutObj.isBannerBlur,\n    layoutObj,\n    baseLongSize,\n  };\n};\n"]},"metadata":{},"sourceType":"module"}