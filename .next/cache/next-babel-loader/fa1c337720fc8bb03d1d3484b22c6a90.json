{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { BaseAccordion } from './base-accordion';\nimport { AccordionButton, AccordionItem, AccordionContents, single, preventClose, combineReducers } from './shared';\nexport default function Accordion(_ref) {\n  var items = _ref.items,\n      props = _objectWithoutProperties(_ref, [\"items\"]);\n\n  return __jsx(BaseAccordion, _extends({\n    stateReducer: combineReducers(single, preventClose)\n  }, props), function (_ref2) {\n    var openIndexes = _ref2.openIndexes,\n        handleItemClick = _ref2.handleItemClick;\n    return __jsx(React.Fragment, null, items.map(function (item, index) {\n      return __jsx(AccordionItem, {\n        key: item.title,\n        isOpen: openIndexes.includes(index)\n      }, __jsx(AccordionButton, {\n        onClick: function onClick() {\n          return handleItemClick(index);\n        }\n      }, __jsx(\"span\", {\n        className: openIndexes.includes(index) ? 'open' : 'closed'\n      }), item.title), __jsx(AccordionContents, {\n        isOpen: openIndexes.includes(index)\n      }, item.contents));\n    }));\n  });\n}\n_c = Accordion;\n\nvar _c;\n\n$RefreshReg$(_c, \"Accordion\");","map":{"version":3,"sources":["/Users/petrhoskovec/Desktop/code/trip_map_staging/src/components/accordion/accordion.js"],"names":["React","BaseAccordion","AccordionButton","AccordionItem","AccordionContents","single","preventClose","combineReducers","Accordion","items","props","openIndexes","handleItemClick","map","item","index","title","includes","contents"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,aAAT,QAA8B,kBAA9B;AACA,SACEC,eADF,EAEEC,aAFF,EAGEC,iBAHF,EAIEC,MAJF,EAKEC,YALF,EAMEC,eANF,QAOO,UAPP;AASA,eAAe,SAASC,SAAT,OAAwC;AAAA,MAAnBC,KAAmB,QAAnBA,KAAmB;AAAA,MAATC,KAAS;;AACrD,SACE,MAAC,aAAD;AACE,IAAA,YAAY,EAAEH,eAAe,CAACF,MAAD,EAASC,YAAT;AAD/B,KAEMI,KAFN,GAIG;AAAA,QAAGC,WAAH,SAAGA,WAAH;AAAA,QAAgBC,eAAhB,SAAgBA,eAAhB;AAAA,WACC,4BACGH,KAAK,CAACI,GAAN,CAAU,UAACC,IAAD,EAAOC,KAAP;AAAA,aACT,MAAC,aAAD;AACE,QAAA,GAAG,EAAED,IAAI,CAACE,KADZ;AAEE,QAAA,MAAM,EAAEL,WAAW,CAACM,QAAZ,CAAqBF,KAArB;AAFV,SAIE,MAAC,eAAD;AAAiB,QAAA,OAAO,EAAE;AAAA,iBAAMH,eAAe,CAACG,KAAD,CAArB;AAAA;AAA1B,SACE;AACE,QAAA,SAAS,EAAEJ,WAAW,CAACM,QAAZ,CAAqBF,KAArB,IAA8B,MAA9B,GAAuC;AADpD,QADF,EAIGD,IAAI,CAACE,KAJR,CAJF,EAUE,MAAC,iBAAD;AAAmB,QAAA,MAAM,EAAEL,WAAW,CAACM,QAAZ,CAAqBF,KAArB;AAA3B,SACGD,IAAI,CAACI,QADR,CAVF,CADS;AAAA,KAAV,CADH,CADD;AAAA,GAJH,CADF;AA2BD;KA5BuBV,S","sourcesContent":["import React from 'react';\nimport { BaseAccordion } from './base-accordion';\nimport {\n  AccordionButton,\n  AccordionItem,\n  AccordionContents,\n  single,\n  preventClose,\n  combineReducers,\n} from './shared';\n\nexport default function Accordion({ items, ...props }) {\n  return (\n    <BaseAccordion\n      stateReducer={combineReducers(single, preventClose)}\n      {...props}\n    >\n      {({ openIndexes, handleItemClick }) => (\n        <>\n          {items.map((item, index) => (\n            <AccordionItem\n              key={item.title}\n              isOpen={openIndexes.includes(index)}\n            >\n              <AccordionButton onClick={() => handleItemClick(index)}>\n                <span\n                  className={openIndexes.includes(index) ? 'open' : 'closed'}\n                ></span>\n                {item.title}\n              </AccordionButton>\n              <AccordionContents isOpen={openIndexes.includes(index)}>\n                {item.contents}\n              </AccordionContents>\n            </AccordionItem>\n          ))}\n        </>\n      )}\n    </BaseAccordion>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}