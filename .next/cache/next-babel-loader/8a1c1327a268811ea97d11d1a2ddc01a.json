{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.drawLayout = drawLayout;\n\nvar _getCenteringFrameWidth = require(\"../Lib/getCenteringFrameWidth\");\n\nvar _constants = require(\"../constants/constants\");\n\nvar _getCurrentPixelRatio = require(\"./getCurrentPixelRatio\");\n\nlet CURRENT_PIXEL_RATIO;\n\nfunction drawLayout(ctx, {\n  height,\n  width,\n  mapTitles,\n  activeLayout: activeLayoutName,\n  frameWidthKoef,\n  product,\n  isProductionPrint\n}) {\n  var _VARIANTS_PRINTFUL$fi;\n\n  const elWidth = width;\n  const elHeight = height;\n  const blackLineWidth = height * 0.0035;\n  let baseLngSide;\n  let whitePdg;\n  let whitePdgDouble;\n  let frameWidth;\n  CURRENT_PIXEL_RATIO = (0, _getCurrentPixelRatio.getCurrentPixelRatio)(product.variantId);\n  const heading = mapTitles === null || mapTitles === void 0 ? void 0 : mapTitles.heading;\n  const subtitle = mapTitles === null || mapTitles === void 0 ? void 0 : mapTitles.subtitle;\n  const frameColor = (_VARIANTS_PRINTFUL$fi = _constants.VARIANTS_PRINTFUL.find(variant => variant.id === product.variantId).frameColor) !== null && _VARIANTS_PRINTFUL$fi !== void 0 ? _VARIANTS_PRINTFUL$fi : \"red\";\n\n  if (height > width) {\n    baseLngSide = height;\n  } else {\n    baseLngSide = width;\n  }\n\n  whitePdg = baseLngSide * _constants.LAY_SINGLE_FRAME_PDNG;\n  whitePdgDouble = baseLngSide * _constants.LAY_DOUBLE_FRAME_PDNG;\n  frameWidth = baseLngSide * frameWidthKoef;\n  const {\n    paddingWidth,\n    isPaddingFromFrame,\n    paddingCoefficient,\n    bottomBannerHeight,\n    isBannerBlur,\n    layoutObj\n  } = (0, _getCenteringFrameWidth.getCenteringFrameWidth)({\n    variantId: product.variantId,\n    layout: activeLayoutName,\n    elWidth: width,\n    elHeight: height\n  });\n\n  if (!isPaddingFromFrame) {\n    drawPaddingWrap({\n      ctx,\n      padding: paddingWidth * CURRENT_PIXEL_RATIO,\n      elWidth: width,\n      elHeight: height,\n      layoutObj\n    });\n  }\n\n  drawBottomBox({\n    ctx,\n    padding: paddingWidth * CURRENT_PIXEL_RATIO,\n    banner: bottomBannerHeight * CURRENT_PIXEL_RATIO,\n    elWidth: width,\n    elHeight: height,\n    isBannerBlur,\n    isPaddingFromFrame\n  });\n  drawText({\n    ctx,\n    paddingCoefficient,\n    paddingWidth,\n    elWidth: width,\n    elHeight: height,\n    baseLngSide,\n    heading,\n    subtitle,\n    layoutObj\n  });\n\n  if (activeLayoutName === _constants.LAYOUT_STYLE_NAMES.PURE) {// Nothing\n  } else if (activeLayoutName === _constants.LAYOUT_STYLE_NAMES.BOTTOM_LINE) {\n    ctx.beginPath();\n    ctx.fillStyle = \"black\";\n    ctx.fillRect(0, elHeight - paddingWidth * CURRENT_PIXEL_RATIO - bottomBannerHeight * CURRENT_PIXEL_RATIO, elWidth, blackLineWidth);\n    ctx.stroke();\n  } else if (activeLayoutName === _constants.LAYOUT_STYLE_NAMES.BORDER_BOX) {} else if (activeLayoutName === _constants.LAYOUT_STYLE_NAMES.BORDER_BLUR) {} else if (activeLayoutName === _constants.LAYOUT_STYLE_NAMES.DOUBLE_BORDER_BLUR) {\n    ctx.lineWidth = 1 * CURRENT_PIXEL_RATIO;\n    ctx.strokeStyle = \"black\";\n    ctx.strokeRect(whitePdgDouble, whitePdgDouble, elWidth - whitePdgDouble * 2, elHeight - whitePdgDouble * 2);\n    ctx.lineWidth = 2 * CURRENT_PIXEL_RATIO;\n    const pdgDouble = 0.75;\n    ctx.strokeRect(whitePdgDouble * pdgDouble, whitePdgDouble * pdgDouble, elWidth - whitePdgDouble * 2 * pdgDouble, elHeight - whitePdgDouble * 2 * pdgDouble);\n  }\n\n  if (frameWidth && !isProductionPrint) {\n    drawFrame(ctx, elWidth, elHeight, frameWidth, frameColor);\n  }\n}\n\nfunction drawFrame(ctx, elWidth, elHeight, frWd, color) {\n  ctx.lineWidth = 7;\n  ctx.fillStyle = color;\n  ctx.fillRect(0, 0, frWd, elHeight);\n  ctx.fillRect(0, 0, elWidth, frWd);\n  ctx.fillRect(elWidth - frWd, 0, frWd, elHeight);\n  ctx.fillRect(0, elHeight - frWd, elWidth, frWd);\n  ctx.stroke();\n}\n\nfunction drawPaddingWrap({\n  ctx,\n  padding,\n  elWidth,\n  elHeight,\n  layoutObj\n}) {\n  ctx.beginPath();\n  ctx.fillStyle = layoutObj.paddingColor;\n  ctx.fillRect(0, 0, padding, elHeight);\n  ctx.fillRect(0, 0, elWidth, padding);\n  ctx.fillRect(elWidth - padding, 0, padding, elHeight);\n  ctx.fillRect(0, elHeight - padding, elWidth, padding);\n  ctx.stroke();\n}\n\nfunction drawBottomBox({\n  ctx,\n  padding,\n  banner,\n  elWidth,\n  elHeight,\n  isBannerBlur,\n  isPaddingFromFrame\n}) {\n  const extraBlueAreaKoef = isBannerBlur ? 1.2 : 1;\n  var gradient = ctx.createLinearGradient(0, elHeight - padding - banner * extraBlueAreaKoef, 0, elHeight - padding);\n  gradient.addColorStop(0, \"rgba(255,255,255,0.1)\");\n  gradient.addColorStop(0.1, \"rgba(255,255,255,0.6)\");\n  gradient.addColorStop(0.2, \"rgba(255,255,255,0.8)\");\n  gradient.addColorStop(0.3, \"rgba(255,255,255,1)\");\n  gradient.addColorStop(1, \"rgba(255,255,255,1)\");\n  ctx.fillStyle = isBannerBlur ? gradient : \"white\";\n  ctx.beginPath();\n\n  if (isPaddingFromFrame) {\n    ctx.fillRect(0, elHeight - padding - banner * extraBlueAreaKoef, elWidth, banner * extraBlueAreaKoef + padding);\n  } else {\n    ctx.fillRect(padding - 1, elHeight - padding - banner * extraBlueAreaKoef, elWidth - padding * 2 + 2, banner * extraBlueAreaKoef + 1);\n  }\n\n  ctx.stroke();\n}\n\nfunction drawText({\n  ctx,\n  paddingCoefficient,\n  paddingWidth,\n  elWidth,\n  elHeight,\n  baseLngSide,\n  heading,\n  subtitle,\n  layoutObj\n}) {\n  var _layoutObj$text$align, _layoutObj$text$align2;\n\n  // const headingCoef = elHeight === baseLngSide ? 0.06 : 0.077;\n  // const subtitleCoef = elHeight === baseLngSide ? 0.0275 : 0.033;\n  const headingCoef = elHeight === baseLngSide ? 0.047 : 0.071;\n  const subtitleCoef = elHeight === baseLngSide ? 0.011 : 0.018;\n  const headingText = (heading === null || heading === void 0 ? void 0 : heading.text) && layoutObj.text.isVisible ? heading === null || heading === void 0 ? void 0 : heading.text : \"\";\n  const subtitleText = (subtitle === null || subtitle === void 0 ? void 0 : subtitle.text) && layoutObj.text.isVisible ? subtitle === null || subtitle === void 0 ? void 0 : subtitle.text : \"\";\n  ctx.textBaseline = \"Alphabetic\";\n  ctx.fillStyle = \"black\";\n  ctx.font = `${(heading === null || heading === void 0 ? void 0 : heading.size) * 0.001 * 3 * baseLngSide}px ${_constants.FONT_TITLES}`;\n  ctx.textAlign = (_layoutObj$text$align = layoutObj.text.align) !== null && _layoutObj$text$align !== void 0 ? _layoutObj$text$align : \"center\";\n  ctx.fillText(headingText, elWidth * 0.5, elHeight * (1 - headingCoef) - paddingWidth * CURRENT_PIXEL_RATIO // paddingWidth * CURRENT_PIXEL_RATIO !important because paddingWidth is relative to longest side\n  );\n  ctx.fillStyle = \"black\";\n  ctx.font = `100 ${(subtitle === null || subtitle === void 0 ? void 0 : subtitle.size) * 0.003 * baseLngSide}px ${_constants.FONT_TITLES}`;\n  ctx.textAlign = (_layoutObj$text$align2 = layoutObj.text.align) !== null && _layoutObj$text$align2 !== void 0 ? _layoutObj$text$align2 : \"center\";\n  ctx.fillText(subtitleText, elWidth * 0.5, elHeight * (1 - subtitleCoef) - paddingWidth * CURRENT_PIXEL_RATIO // paddingWidth * CURRENT_PIXEL_RATIO !important because paddingWidth is relative to longest side\n  );\n}\n\nmodule.exports = {\n  drawLayout\n};","map":{"version":3,"sources":["/Users/petrhoskovec/Desktop/code/trip_map_staging/src/Lib/drawLayout.js"],"names":["CURRENT_PIXEL_RATIO","drawLayout","ctx","height","width","mapTitles","activeLayout","activeLayoutName","frameWidthKoef","product","isProductionPrint","elWidth","elHeight","blackLineWidth","baseLngSide","whitePdg","whitePdgDouble","frameWidth","variantId","heading","subtitle","frameColor","VARIANTS_PRINTFUL","find","variant","id","LAY_SINGLE_FRAME_PDNG","LAY_DOUBLE_FRAME_PDNG","paddingWidth","isPaddingFromFrame","paddingCoefficient","bottomBannerHeight","isBannerBlur","layoutObj","layout","drawPaddingWrap","padding","drawBottomBox","banner","drawText","LAYOUT_STYLE_NAMES","PURE","BOTTOM_LINE","beginPath","fillStyle","fillRect","stroke","BORDER_BOX","BORDER_BLUR","DOUBLE_BORDER_BLUR","lineWidth","strokeStyle","strokeRect","pdgDouble","drawFrame","frWd","color","paddingColor","extraBlueAreaKoef","gradient","createLinearGradient","addColorStop","headingCoef","subtitleCoef","headingText","text","isVisible","subtitleText","textBaseline","font","size","FONT_TITLES","textAlign","align","fillText","module","exports"],"mappings":"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","sourcesContent":["import { getCenteringFrameWidth } from \"../Lib/getCenteringFrameWidth\";\n\nimport {\n  LAYOUT_STYLE_NAMES,\n  LAY_DOUBLE_FRAME_PDNG,\n  LAY_SINGLE_FRAME_PDNG,\n  VARIANTS_PRINTFUL,\n  FONT_TITLES,\n  PIXEL_RATIO,\n} from \"../constants/constants\";\n\nimport { getCurrentPixelRatio } from \"./getCurrentPixelRatio\";\n\nlet CURRENT_PIXEL_RATIO;\n\nexport function drawLayout(\n  ctx,\n  {\n    height,\n    width,\n    mapTitles,\n    activeLayout: activeLayoutName,\n    frameWidthKoef,\n    product,\n    isProductionPrint,\n  }\n) {\n  const elWidth = width;\n  const elHeight = height;\n  const blackLineWidth = height * 0.0035;\n  let baseLngSide;\n  let whitePdg;\n  let whitePdgDouble;\n  let frameWidth;\n\n  CURRENT_PIXEL_RATIO = getCurrentPixelRatio(product.variantId);\n\n  const heading = mapTitles?.heading;\n  const subtitle = mapTitles?.subtitle;\n  const frameColor =\n    VARIANTS_PRINTFUL.find((variant) => variant.id === product.variantId)\n      .frameColor ?? \"red\";\n\n  if (height > width) {\n    baseLngSide = height;\n  } else {\n    baseLngSide = width;\n  }\n\n  whitePdg = baseLngSide * LAY_SINGLE_FRAME_PDNG;\n  whitePdgDouble = baseLngSide * LAY_DOUBLE_FRAME_PDNG;\n  frameWidth = baseLngSide * frameWidthKoef;\n\n  const {\n    paddingWidth,\n    isPaddingFromFrame,\n    paddingCoefficient,\n    bottomBannerHeight,\n    isBannerBlur,\n    layoutObj,\n  } = getCenteringFrameWidth({\n    variantId: product.variantId,\n    layout: activeLayoutName,\n    elWidth: width,\n    elHeight: height,\n  });\n\n  if (!isPaddingFromFrame) {\n    drawPaddingWrap({\n      ctx,\n      padding: paddingWidth * CURRENT_PIXEL_RATIO,\n      elWidth: width,\n      elHeight: height,\n      layoutObj,\n    });\n  }\n\n  drawBottomBox({\n    ctx,\n    padding: paddingWidth * CURRENT_PIXEL_RATIO,\n    banner: bottomBannerHeight * CURRENT_PIXEL_RATIO,\n    elWidth: width,\n    elHeight: height,\n    isBannerBlur,\n    isPaddingFromFrame,\n  });\n\n  drawText({\n    ctx,\n    paddingCoefficient,\n    paddingWidth,\n    elWidth: width,\n    elHeight: height,\n    baseLngSide,\n    heading,\n    subtitle,\n    layoutObj,\n  });\n\n  if (activeLayoutName === LAYOUT_STYLE_NAMES.PURE) {\n    // Nothing\n  } else if (activeLayoutName === LAYOUT_STYLE_NAMES.BOTTOM_LINE) {\n    ctx.beginPath();\n    ctx.fillStyle = \"black\";\n    ctx.fillRect(\n      0,\n      elHeight -\n        paddingWidth * CURRENT_PIXEL_RATIO -\n        bottomBannerHeight * CURRENT_PIXEL_RATIO,\n      elWidth,\n      blackLineWidth\n    );\n    ctx.stroke();\n  } else if (activeLayoutName === LAYOUT_STYLE_NAMES.BORDER_BOX) {\n  } else if (activeLayoutName === LAYOUT_STYLE_NAMES.BORDER_BLUR) {\n  } else if (activeLayoutName === LAYOUT_STYLE_NAMES.DOUBLE_BORDER_BLUR) {\n    ctx.lineWidth = 1 * CURRENT_PIXEL_RATIO;\n    ctx.strokeStyle = \"black\";\n\n    ctx.strokeRect(\n      whitePdgDouble,\n      whitePdgDouble,\n      elWidth - whitePdgDouble * 2,\n      elHeight - whitePdgDouble * 2\n    );\n\n    ctx.lineWidth = 2 * CURRENT_PIXEL_RATIO;\n\n    const pdgDouble = 0.75;\n\n    ctx.strokeRect(\n      whitePdgDouble * pdgDouble,\n      whitePdgDouble * pdgDouble,\n      elWidth - whitePdgDouble * 2 * pdgDouble,\n      elHeight - whitePdgDouble * 2 * pdgDouble\n    );\n  }\n\n  if (frameWidth && !isProductionPrint) {\n    drawFrame(ctx, elWidth, elHeight, frameWidth, frameColor);\n  }\n}\n\nfunction drawFrame(ctx, elWidth, elHeight, frWd, color) {\n  ctx.lineWidth = 7;\n  ctx.fillStyle = color;\n  ctx.fillRect(0, 0, frWd, elHeight);\n  ctx.fillRect(0, 0, elWidth, frWd);\n  ctx.fillRect(elWidth - frWd, 0, frWd, elHeight);\n  ctx.fillRect(0, elHeight - frWd, elWidth, frWd);\n  ctx.stroke();\n}\n\nfunction drawPaddingWrap({ ctx, padding, elWidth, elHeight, layoutObj }) {\n  ctx.beginPath();\n  ctx.fillStyle = layoutObj.paddingColor;\n  ctx.fillRect(0, 0, padding, elHeight);\n  ctx.fillRect(0, 0, elWidth, padding);\n  ctx.fillRect(elWidth - padding, 0, padding, elHeight);\n  ctx.fillRect(0, elHeight - padding, elWidth, padding);\n  ctx.stroke();\n}\n\nfunction drawBottomBox({\n  ctx,\n  padding,\n  banner,\n  elWidth,\n  elHeight,\n  isBannerBlur,\n  isPaddingFromFrame,\n}) {\n  const extraBlueAreaKoef = isBannerBlur ? 1.2 : 1;\n\n  var gradient = ctx.createLinearGradient(\n    0,\n    elHeight - padding - banner * extraBlueAreaKoef,\n    0,\n    elHeight - padding\n  );\n\n  gradient.addColorStop(0, \"rgba(255,255,255,0.1)\");\n  gradient.addColorStop(0.1, \"rgba(255,255,255,0.6)\");\n  gradient.addColorStop(0.2, \"rgba(255,255,255,0.8)\");\n  gradient.addColorStop(0.3, \"rgba(255,255,255,1)\");\n  gradient.addColorStop(1, \"rgba(255,255,255,1)\");\n\n  ctx.fillStyle = isBannerBlur ? gradient : \"white\";\n\n  ctx.beginPath();\n\n  if (isPaddingFromFrame) {\n    ctx.fillRect(\n      0,\n      elHeight - padding - banner * extraBlueAreaKoef,\n      elWidth,\n      banner * extraBlueAreaKoef + padding\n    );\n  } else {\n    ctx.fillRect(\n      padding - 1,\n      elHeight - padding - banner * extraBlueAreaKoef,\n      elWidth - padding * 2 + 2,\n      banner * extraBlueAreaKoef + 1\n    );\n  }\n  ctx.stroke();\n}\n\nfunction drawText({\n  ctx,\n  paddingCoefficient,\n  paddingWidth,\n  elWidth,\n  elHeight,\n  baseLngSide,\n  heading,\n  subtitle,\n  layoutObj,\n}) {\n  // const headingCoef = elHeight === baseLngSide ? 0.06 : 0.077;\n  // const subtitleCoef = elHeight === baseLngSide ? 0.0275 : 0.033;\n\n  const headingCoef = elHeight === baseLngSide ? 0.047 : 0.071;\n  const subtitleCoef = elHeight === baseLngSide ? 0.011 : 0.018;\n\n  const headingText =\n    heading?.text && layoutObj.text.isVisible ? heading?.text : \"\";\n  const subtitleText =\n    subtitle?.text && layoutObj.text.isVisible ? subtitle?.text : \"\";\n\n  ctx.textBaseline = \"Alphabetic\";\n\n  ctx.fillStyle = \"black\";\n  ctx.font = `${heading?.size * 0.001 * 3 * baseLngSide}px ${FONT_TITLES}`;\n  ctx.textAlign = layoutObj.text.align ?? \"center\";\n  ctx.fillText(\n    headingText,\n    elWidth * 0.5,\n    elHeight * (1 - headingCoef) - paddingWidth * CURRENT_PIXEL_RATIO // paddingWidth * CURRENT_PIXEL_RATIO !important because paddingWidth is relative to longest side\n  );\n  ctx.fillStyle = \"black\";\n  ctx.font = `100 ${subtitle?.size * 0.003 * baseLngSide}px ${FONT_TITLES}`;\n  ctx.textAlign = layoutObj.text.align ?? \"center\";\n  ctx.fillText(\n    subtitleText,\n    elWidth * 0.5,\n    elHeight * (1 - subtitleCoef) - paddingWidth * CURRENT_PIXEL_RATIO // paddingWidth * CURRENT_PIXEL_RATIO !important because paddingWidth is relative to longest side\n  );\n}\n\nmodule.exports = {\n  drawLayout,\n};\n"]},"metadata":{},"sourceType":"script"}