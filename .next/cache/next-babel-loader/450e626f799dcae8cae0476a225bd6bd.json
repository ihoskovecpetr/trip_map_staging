{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { useState, useEffect, useMemo } from \"react\";\nimport axios from \"axios\";\nimport { VARIANTS_PRINTFUL } from \"../constants/constants\";\n\nconst getShippingCostByVariantId = id => {\n  var _VARIANTS_PRINTFUL$fi;\n\n  return (_VARIANTS_PRINTFUL$fi = VARIANTS_PRINTFUL.find(variant => variant.id === id)) === null || _VARIANTS_PRINTFUL$fi === void 0 ? void 0 : _VARIANTS_PRINTFUL$fi.shipping.price;\n};\n\nexport function useGetShippingInfoPrintful(variantId) {\n  const {\n    0: isShippingInfoLoading,\n    1: setIsShippingInfoLoading\n  } = useState(false);\n  const {\n    0: shippingInfoObject,\n    1: setShippingInfoObject\n  } = useState(null);\n\n  const getSetPrice = async () => {\n    try {\n      var _response$data;\n\n      setIsShippingInfoLoading(true);\n      setShippingInfoObject(null);\n      const response = await axios.post(`api/shipping-info-printful?variantId=${variantId}`);\n      setIsShippingInfoLoading(false);\n\n      const responseObj = _objectSpread(_objectSpread({}, response === null || response === void 0 ? void 0 : (_response$data = response.data) === null || _response$data === void 0 ? void 0 : _response$data.result), {}, {\n        rate: getShippingCostByVariantId(variantId)\n      });\n\n      setShippingInfoObject(responseObj);\n    } catch (e) {\n      console.log({\n        e\n      });\n    }\n  };\n\n  useEffect(() => {\n    getSetPrice();\n  }, [JSON.stringify(variantId)]);\n  const deliveryInfoObject_memo = useMemo(() => {\n    return shippingInfoObject;\n  }, [shippingInfoObject]);\n  return {\n    shippingInfoObject: deliveryInfoObject_memo,\n    isShippingInfoLoading\n  };\n}","map":{"version":3,"sources":["/Users/petrhoskovec/Desktop/code/trip_map_staging/src/Hooks/useGetShippingInfoPrintful.js"],"names":["useState","useEffect","useMemo","axios","VARIANTS_PRINTFUL","getShippingCostByVariantId","id","find","variant","shipping","price","useGetShippingInfoPrintful","variantId","isShippingInfoLoading","setIsShippingInfoLoading","shippingInfoObject","setShippingInfoObject","getSetPrice","response","post","responseObj","data","result","rate","e","console","log","JSON","stringify","deliveryInfoObject_memo"],"mappings":";;;;;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,EAA8BC,OAA9B,QAA6C,OAA7C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,iBAAT,QAAkC,wBAAlC;;AAEA,MAAMC,0BAA0B,GAAIC,EAAD,IAAQ;AAAA;;AACzC,kCAAOF,iBAAiB,CAACG,IAAlB,CAAwBC,OAAD,IAAaA,OAAO,CAACF,EAAR,KAAeA,EAAnD,CAAP,0DAAO,sBAAwDG,QAAxD,CAAiEC,KAAxE;AACD,CAFD;;AAIA,OAAO,SAASC,0BAAT,CAAoCC,SAApC,EAA+C;AACpD,QAAM;AAAA,OAACC,qBAAD;AAAA,OAAwBC;AAAxB,MAAoDd,QAAQ,CAAC,KAAD,CAAlE;AACA,QAAM;AAAA,OAACe,kBAAD;AAAA,OAAqBC;AAArB,MAA8ChB,QAAQ,CAAC,IAAD,CAA5D;;AAEA,QAAMiB,WAAW,GAAG,YAAY;AAC9B,QAAI;AAAA;;AACFH,MAAAA,wBAAwB,CAAC,IAAD,CAAxB;AACAE,MAAAA,qBAAqB,CAAC,IAAD,CAArB;AAEA,YAAME,QAAQ,GAAG,MAAMf,KAAK,CAACgB,IAAN,CACpB,wCAAuCP,SAAU,EAD7B,CAAvB;AAIAE,MAAAA,wBAAwB,CAAC,KAAD,CAAxB;;AAEA,YAAMM,WAAW,mCACZF,QADY,aACZA,QADY,yCACZA,QAAQ,CAAEG,IADE,mDACZ,eAAgBC,MADJ;AAEfC,QAAAA,IAAI,EAAElB,0BAA0B,CAACO,SAAD;AAFjB,QAAjB;;AAKAI,MAAAA,qBAAqB,CAACI,WAAD,CAArB;AACD,KAhBD,CAgBE,OAAOI,CAAP,EAAU;AACVC,MAAAA,OAAO,CAACC,GAAR,CAAY;AAAEF,QAAAA;AAAF,OAAZ;AACD;AACF,GApBD;;AAsBAvB,EAAAA,SAAS,CAAC,MAAM;AACdgB,IAAAA,WAAW;AACZ,GAFQ,EAEN,CAACU,IAAI,CAACC,SAAL,CAAehB,SAAf,CAAD,CAFM,CAAT;AAIA,QAAMiB,uBAAuB,GAAG3B,OAAO,CAAC,MAAM;AAC5C,WAAOa,kBAAP;AACD,GAFsC,EAEpC,CAACA,kBAAD,CAFoC,CAAvC;AAIA,SAAO;AAAEA,IAAAA,kBAAkB,EAAEc,uBAAtB;AAA+ChB,IAAAA;AAA/C,GAAP;AACD","sourcesContent":["import { useState, useEffect, useMemo } from \"react\";\nimport axios from \"axios\";\nimport { VARIANTS_PRINTFUL } from \"../constants/constants\";\n\nconst getShippingCostByVariantId = (id) => {\n  return VARIANTS_PRINTFUL.find((variant) => variant.id === id)?.shipping.price;\n};\n\nexport function useGetShippingInfoPrintful(variantId) {\n  const [isShippingInfoLoading, setIsShippingInfoLoading] = useState(false);\n  const [shippingInfoObject, setShippingInfoObject] = useState(null);\n\n  const getSetPrice = async () => {\n    try {\n      setIsShippingInfoLoading(true);\n      setShippingInfoObject(null);\n\n      const response = await axios.post(\n        `api/shipping-info-printful?variantId=${variantId}`\n      );\n\n      setIsShippingInfoLoading(false);\n\n      const responseObj = {\n        ...response?.data?.result,\n        rate: getShippingCostByVariantId(variantId),\n      };\n\n      setShippingInfoObject(responseObj);\n    } catch (e) {\n      console.log({ e });\n    }\n  };\n\n  useEffect(() => {\n    getSetPrice();\n  }, [JSON.stringify(variantId)]);\n\n  const deliveryInfoObject_memo = useMemo(() => {\n    return shippingInfoObject;\n  }, [shippingInfoObject]);\n\n  return { shippingInfoObject: deliveryInfoObject_memo, isShippingInfoLoading };\n}\n"]},"metadata":{},"sourceType":"module"}