{"ast":null,"code":"var _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\n/** @jsx jsx */\nimport React, { useEffect, useState } from \"react\";\nimport { jsx, Text, Button, Link } from \"theme-ui\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nexport default function NextTabBtn(_ref) {\n  _s();\n\n  var onClick = _ref.onClick,\n      _ref$width = _ref.width,\n      width = _ref$width === void 0 ? \"90%\" : _ref$width,\n      children = _ref.children,\n      isLoadingOnClick = _ref.isLoadingOnClick,\n      isDisabled = _ref.isDisabled,\n      disabledText = _ref.disabledText,\n      margin = _ref.margin,\n      price = _ref.price;\n  var classes = useStyles();\n\n  var _useState = useState(false),\n      isLoading = _useState[0],\n      setIsLoading = _useState[1];\n\n  useEffect(function () {\n    return function () {\n      setIsLoading(false);\n    };\n  }, []);\n\n  function onClickExtended() {\n    if (isLoading || isDisabled) {\n      return;\n    }\n\n    if (isLoadingOnClick) {\n      setIsLoading(true);\n    }\n\n    onClick();\n  }\n\n  var priceString = \"| CZK \" + price;\n  return jsx(\"div\", {\n    sx: styles.container,\n    style: {\n      margin: margin\n    }\n  }, jsx(\"div\", {\n    sx: styles.btn,\n    style: {\n      width: width,\n      backgroundColor: isDisabled && \"lightGrey\"\n    },\n    onClick: onClickExtended\n  }, isLoading ? jsx(CircularProgress // width={30}\n  , {\n    classes: {\n      root: classes.spinnerRoot\n    }\n  }) : disabledText && isDisabled ? disabledText : jsx(React.Fragment, null, \"\".concat(children), \" \", jsx(\"span\", {\n    sx: styles.priceText\n  }, \"\".concat(price ? priceString : \"\")))));\n}\n\n_s(NextTabBtn, \"mW/mCQU2PDk7dloWP7NbLG9Fb8k=\", false, function () {\n  return [useStyles];\n});\n\n_c = NextTabBtn;\nvar styles = {\n  container: {\n    width: \"100%\",\n    display: \"flex\",\n    justifyContent: \"center\" // margin: \"20px 0\",\n\n  },\n  btn: {\n    backgroundColor: \"cta_color\",\n    color: \"white\",\n    padding: \"10px\",\n    textAlign: \"center\",\n    cursor: \"pointer\",\n    fontWeight: \"600\"\n  },\n  priceText: {\n    color: \"primary\"\n  }\n};\nvar useStyles = makeStyles(function (theme) {\n  return {\n    spinnerRoot: {\n      height: \"30px !important\",\n      width: \"30px !important\",\n      color: \"white\"\n    }\n  };\n});\n\nvar _c;\n\n$RefreshReg$(_c, \"NextTabBtn\");","map":{"version":3,"sources":["/Users/petrhoskovec/Desktop/code/trip_map_staging/src/components/NextTabBtn/NextTabBtn.js"],"names":["React","useEffect","useState","jsx","Text","Button","Link","makeStyles","CircularProgress","NextTabBtn","onClick","width","children","isLoadingOnClick","isDisabled","disabledText","margin","price","classes","useStyles","isLoading","setIsLoading","onClickExtended","priceString","styles","container","btn","backgroundColor","root","spinnerRoot","priceText","display","justifyContent","color","padding","textAlign","cursor","fontWeight","theme","height"],"mappings":"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","sourcesContent":["/** @jsx jsx */\nimport React, { useEffect, useState } from \"react\";\nimport { jsx, Text, Button, Link } from \"theme-ui\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\n\nexport default function NextTabBtn({\n  onClick,\n  width = \"90%\",\n  children,\n  isLoadingOnClick,\n  isDisabled,\n  disabledText,\n  margin,\n  price,\n}) {\n  const classes = useStyles();\n\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    return () => {\n      setIsLoading(false);\n    };\n  }, []);\n\n  function onClickExtended() {\n    if (isLoading || isDisabled) {\n      return;\n    }\n\n    if (isLoadingOnClick) {\n      setIsLoading(true);\n    }\n    onClick();\n  }\n\n  const priceString = \"| CZK \" + price;\n  return (\n    <div sx={styles.container} style={{ margin: margin }}>\n      <div\n        sx={styles.btn}\n        style={{ width: width, backgroundColor: isDisabled && \"lightGrey\" }}\n        onClick={onClickExtended}\n      >\n        {isLoading ? (\n          <CircularProgress\n            // width={30}\n            classes={{\n              root: classes.spinnerRoot,\n            }}\n          />\n        ) : disabledText && isDisabled ? (\n          disabledText\n        ) : (\n          <>\n            {`${children}`}{\" \"}\n            <span sx={styles.priceText}>{`${price ? priceString : \"\"}`}</span>\n          </>\n        )}\n      </div>\n    </div>\n  );\n}\n\nconst styles = {\n  container: {\n    width: \"100%\",\n    display: \"flex\",\n    justifyContent: \"center\",\n    // margin: \"20px 0\",\n  },\n  btn: {\n    backgroundColor: \"cta_color\",\n    color: \"white\",\n    padding: \"10px\",\n    textAlign: \"center\",\n    cursor: \"pointer\",\n    fontWeight: \"600\",\n  },\n  priceText: {\n    color: \"primary\",\n  },\n};\n\nconst useStyles = makeStyles((theme) => ({\n  spinnerRoot: {\n    height: \"30px !important\",\n    width: \"30px !important\",\n    color: \"white\",\n  },\n}));\n"]},"metadata":{},"sourceType":"module"}