{"ast":null,"code":"var __jsx = React.createElement;\n\n/** @jsx jsx */\nimport React from \"react\";\nimport { jsx } from \"theme-ui\";\nimport styled from \"styled-components\";\nexport default function CostsTable({\n  product,\n  // shippingInfoObject,\n  // isShippingInfoLoading,\n  dataPrintfulVariant\n}) {\n  var _dataPrintfulVariant$;\n\n  return jsx(React.Fragment, null, jsx(\"div\", {\n    sx: styles.costsWrap\n  }, jsx(CostItem, {\n    name: \"ZHOTOVEN\\xCD\",\n    price: dataPrintfulVariant === null || dataPrintfulVariant === void 0 ? void 0 : dataPrintfulVariant.price,\n    currency: (_dataPrintfulVariant$ = dataPrintfulVariant === null || dataPrintfulVariant === void 0 ? void 0 : dataPrintfulVariant.currency) !== null && _dataPrintfulVariant$ !== void 0 ? _dataPrintfulVariant$ : \"\"\n  }), jsx(CostItem, {\n    name: \"DORU\\u010CEN\\xCD\",\n    price: dataPrintfulVariant === null || dataPrintfulVariant === void 0 ? void 0 : dataPrintfulVariant.shipping.rate,\n    currency: dataPrintfulVariant === null || dataPrintfulVariant === void 0 ? void 0 : dataPrintfulVariant.shipping.currency,\n    isDataLoading: dataPrintfulVariant ? false : true\n  })), jsx(CostItem, {\n    name: \"CELKEM\",\n    price: eval(`${dataPrintfulVariant === null || dataPrintfulVariant === void 0 ? void 0 : dataPrintfulVariant.price} + ${dataPrintfulVariant === null || dataPrintfulVariant === void 0 ? void 0 : dataPrintfulVariant.shipping.rate}`) //TODO add price algorithm big.js\n    ,\n    isDataLoading: dataPrintfulVariant ? false : true,\n    currency: \"CZK\",\n    isLargePrice: true\n  }));\n}\n\nfunction CostItem({\n  name,\n  price,\n  currency,\n  isLargePrice,\n  isDataLoading\n}) {\n  return jsx(ItemWrap, null, jsx(CostNameP, null, name), jsx(\"div\", {\n    sx: styles.itemText\n  }, jsx(CostP, {\n    isLargePrice: isLargePrice\n  }, isDataLoading ? \"ZJIŠTUJI...\" : `${currency} ${price}`)));\n}\n\nconst ItemWrap = styled.div`\n  display: flex;\n  justify-content: space-between;\n  width: 100%;\n`;\nconst CostNameP = styled.p`\n  font-size: 0.8rem;\n  font-weight: 400;\n  color: grey;\n`;\nconst CostP = styled.p`\n  font-size: ${({\n  isLargePrice\n}) => isLargePrice ? \"1rem\" : \"0.8rem\"};\n  font-weight: 600;\n`;\nconst styles = {\n  costsWrap: {\n    borderBottom: \"1px solid lightGrey\",\n    py: \"5px\"\n  },\n  itemText: {\n    color: \"primary\"\n  }\n};","map":{"version":3,"sources":["/Users/petrhoskovec/Desktop/code/trip_map_staging/src/components/CheckoutCard/CostsTable.js"],"names":["React","jsx","styled","CostsTable","product","dataPrintfulVariant","styles","costsWrap","price","currency","shipping","rate","eval","CostItem","name","isLargePrice","isDataLoading","itemText","ItemWrap","div","CostNameP","p","CostP","borderBottom","py","color"],"mappings":";;AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,QAAoB,UAApB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,eAAe,SAASC,UAAT,CAAoB;AACjCC,EAAAA,OADiC;AAEjC;AACA;AACAC,EAAAA;AAJiC,CAApB,EAKZ;AAAA;;AACD,SACE,0BACE;AAAK,IAAA,EAAE,EAAEC,MAAM,CAACC;AAAhB,KACE,IAAC,QAAD;AACE,IAAA,IAAI,EAAC,cADP;AAEE,IAAA,KAAK,EAAEF,mBAAF,aAAEA,mBAAF,uBAAEA,mBAAmB,CAAEG,KAF9B;AAGE,IAAA,QAAQ,2BAAEH,mBAAF,aAAEA,mBAAF,uBAAEA,mBAAmB,CAAEI,QAAvB,yEAAmC;AAH7C,IADF,EAOE,IAAC,QAAD;AACE,IAAA,IAAI,EAAC,kBADP;AAEE,IAAA,KAAK,EAAEJ,mBAAF,aAAEA,mBAAF,uBAAEA,mBAAmB,CAAEK,QAArB,CAA8BC,IAFvC;AAGE,IAAA,QAAQ,EAAEN,mBAAF,aAAEA,mBAAF,uBAAEA,mBAAmB,CAAEK,QAArB,CAA8BD,QAH1C;AAIE,IAAA,aAAa,EAAEJ,mBAAmB,GAAG,KAAH,GAAW;AAJ/C,IAPF,CADF,EAeE,IAAC,QAAD;AACE,IAAA,IAAI,EAAC,QADP;AAEE,IAAA,KAAK,EAAEO,IAAI,CACR,GAAEP,mBAAH,aAAGA,mBAAH,uBAAGA,mBAAmB,CAAEG,KAAM,MAAKH,mBAAnC,aAAmCA,mBAAnC,uBAAmCA,mBAAmB,CAAEK,QAArB,CAA8BC,IAAK,EAD7D,CAFb,CAIK;AAJL;AAKE,IAAA,aAAa,EAAEN,mBAAmB,GAAG,KAAH,GAAW,IAL/C;AAME,IAAA,QAAQ,EAAC,KANX;AAOE,IAAA,YAAY;AAPd,IAfF,CADF;AA2BD;;AAED,SAASQ,QAAT,CAAkB;AAAEC,EAAAA,IAAF;AAAQN,EAAAA,KAAR;AAAeC,EAAAA,QAAf;AAAyBM,EAAAA,YAAzB;AAAuCC,EAAAA;AAAvC,CAAlB,EAA0E;AACxE,SACE,IAAC,QAAD,QACE,IAAC,SAAD,QAAYF,IAAZ,CADF,EAEE;AAAK,IAAA,EAAE,EAAER,MAAM,CAACW;AAAhB,KACE,IAAC,KAAD;AAAO,IAAA,YAAY,EAAEF;AAArB,KACGC,aAAa,GAAG,aAAH,GAAoB,GAAEP,QAAS,IAAGD,KAAM,EADxD,CADF,CAFF,CADF;AAUD;;AAED,MAAMU,QAAQ,GAAGhB,MAAM,CAACiB,GAAI;AAC5B;AACA;AACA;AACA,CAJA;AAKA,MAAMC,SAAS,GAAGlB,MAAM,CAACmB,CAAE;AAC3B;AACA;AACA;AACA,CAJA;AAMA,MAAMC,KAAK,GAAGpB,MAAM,CAACmB,CAAE;AACvB,eAAe,CAAC;AAAEN,EAAAA;AAAF,CAAD,KAAuBA,YAAY,GAAG,MAAH,GAAY,QAAU;AACxE;AACA,CAHA;AAKA,MAAMT,MAAM,GAAG;AACbC,EAAAA,SAAS,EAAE;AACTgB,IAAAA,YAAY,EAAE,qBADL;AAETC,IAAAA,EAAE,EAAE;AAFK,GADE;AAKbP,EAAAA,QAAQ,EAAE;AACRQ,IAAAA,KAAK,EAAE;AADC;AALG,CAAf","sourcesContent":["/** @jsx jsx */\nimport React from \"react\";\nimport { jsx } from \"theme-ui\";\nimport styled from \"styled-components\";\n\nexport default function CostsTable({\n  product,\n  // shippingInfoObject,\n  // isShippingInfoLoading,\n  dataPrintfulVariant,\n}) {\n  return (\n    <>\n      <div sx={styles.costsWrap}>\n        <CostItem\n          name=\"ZHOTOVENÍ\"\n          price={dataPrintfulVariant?.price}\n          currency={dataPrintfulVariant?.currency ?? \"\"}\n        />\n\n        <CostItem\n          name=\"DORUČENÍ\"\n          price={dataPrintfulVariant?.shipping.rate}\n          currency={dataPrintfulVariant?.shipping.currency}\n          isDataLoading={dataPrintfulVariant ? false : true}\n        />\n      </div>\n      <CostItem\n        name=\"CELKEM\"\n        price={eval(\n          `${dataPrintfulVariant?.price} + ${dataPrintfulVariant?.shipping.rate}`\n        )} //TODO add price algorithm big.js\n        isDataLoading={dataPrintfulVariant ? false : true}\n        currency=\"CZK\"\n        isLargePrice\n      />\n    </>\n  );\n}\n\nfunction CostItem({ name, price, currency, isLargePrice, isDataLoading }) {\n  return (\n    <ItemWrap>\n      <CostNameP>{name}</CostNameP>\n      <div sx={styles.itemText}>\n        <CostP isLargePrice={isLargePrice}>\n          {isDataLoading ? \"ZJIŠTUJI...\" : `${currency} ${price}`}\n        </CostP>\n      </div>\n    </ItemWrap>\n  );\n}\n\nconst ItemWrap = styled.div`\n  display: flex;\n  justify-content: space-between;\n  width: 100%;\n`;\nconst CostNameP = styled.p`\n  font-size: 0.8rem;\n  font-weight: 400;\n  color: grey;\n`;\n\nconst CostP = styled.p`\n  font-size: ${({ isLargePrice }) => (isLargePrice ? \"1rem\" : \"0.8rem\")};\n  font-weight: 600;\n`;\n\nconst styles = {\n  costsWrap: {\n    borderBottom: \"1px solid lightGrey\",\n    py: \"5px\",\n  },\n  itemText: {\n    color: \"primary\",\n  },\n};\n"]},"metadata":{},"sourceType":"module"}